{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,IAEAC,GAAQ,GAETJ,EAAM,IAKX,OAHAC,EACGQ,MAAK,IAAMhB,EAAAiB,OAAOC,QAAQ,uBAAqBZ,QAAiBC,SAAYY,OAC1E,IAAUnB,EAAAiB,OAAMG,QAAC,sBAASd,QAA8BC,SACtDC,C,CAkBTN,EAAKmB,iBAAiB,UAftB,SAAsBC,GACpBA,EAAMC,iBACN,MAAMC,EAAaC,OAAOvB,EAAKE,cAAc,yBAAyBsB,OAChEC,EAAYF,OAAOvB,EAAKE,cAAc,wBAAwBsB,OAC9DE,EAASH,OAAOvB,EAAKE,cAAc,0BAA0BsB,OAEnE,IAAInB,EAAQiB,EACZ,MAAMK,EAAW,GACjB,IAAK,IAAIvB,EAAW,EAAGA,GAAYsB,EAAQtB,IAAY,CACrD,MAAME,EAAUH,EAAcC,EAAUC,GACxCsB,EAASC,KAAKtB,GACdD,GAASoB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve();\n      } else {\n        reject();\n      }\n    }, delay);\n  });\n  promise\n    .then(() => Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n    .catch(() => Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n  return promise;\n}\n\nfunction startPromise(event) {\n  event.preventDefault();\n  const firstDelay = Number(form.querySelector('input[name = \"delay\"]').value);\n  const delayStep = Number(form.querySelector('input[name = \"step\"]').value);\n  const amount = Number(form.querySelector('input[name = \"amount\"]').value);\n\n  let delay = firstDelay;\n  const promises = [];\n  for (let position = 1; position <= amount; position++) {\n    const promise = createPromise(position, delay);\n    promises.push(promise);\n    delay += delayStep;\n  }\n}\n\nform.addEventListener(\"submit\", startPromise);"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","promise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","Notify","success","catch","failure","addEventListener","event","preventDefault","firstDelay","Number","value","delayStep","amount","promises","push"],"version":3,"file":"03-promises.61d2e0a9.js.map"}